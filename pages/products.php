<?php

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –º–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏".
 */
add_action('admin_menu', function () {
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—á–µ—Ä–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  add_submenu_page(
    P_MY_SKLAD_NAME, // slug —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    __('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤', 'p-my-sklad'), // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–≤ <title>)
    __('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤', 'p-my-sklad'), // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
    'manage_options',                               // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    P_MY_SKLAD_NAME . '_product',                 // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π slug –¥–æ—á–µ—Ä–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    'p_my_sklad_render_subpage_product'              // Callback-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  );
});


/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã.
 */
add_action('admin_init', 'p_my_sklad_handle_product_form_submission');

function p_my_sklad_handle_product_form_submission()
{
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à–∞ —Ñ–æ—Ä–º–∞
  if (!isset($_POST['p_my_sklad_save_product']) || !current_user_can('manage_options')) {
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ nonce
  if (!wp_verify_nonce($_POST['_wpnonce'] ?? '', 'p_my_sklad_token_nonce_product')) {
    add_settings_error(
      P_MY_SKLAD_NAME . '_product',
      'nonce_failed',
      __('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', 'p-my-sklad'),
      'error'
    );
    return;
  }
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫.
 */
function p_my_sklad_render_subpage_product()
{
  if (!current_user_can('manage_options')) {
    wp_die(__('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.', 'p-my-sklad'));
  }

  settings_errors(P_MY_SKLAD_NAME . '_product');
?>
  <div class="wrap">
    <h1><?php echo esc_html__('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤', 'p-my-sklad'); ?></h1>

    <form id="p-my-sklad-products-sync" method="post" action="">
      <?php wp_nonce_field('p_my_sklad_token_nonce_product'); ?>
      <?php submit_button('–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é', 'primary', 'start_sync'); ?>
    </form>

    <div class="sync-status-container" style="margin-top: 30px; padding: 20px; border: 1px solid #ccc; border-radius: 5px;">
      <h3>–°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</h3>
      <div class="progress-wrapper" style="width: 100%; background: #eee; border-radius: 3px; margin: 10px 0;">
        <div class="progress-bar" style="height: 20px; background: #007cba; border-radius: 3px; width: 0%; transition: width 0.3s;"></div>
      </div>
      <div class="progress-text" style="font-weight: bold;">0%</div>
      <div class="status-message" style="color: #555;">–ì–æ—Ç–æ–≤–æ...</div>
      <div class="sync-log" style="margin-top: 15px; max-height: 200px; overflow-y: auto; font-family: monospace; font-size: 14px; background: #f9f9f9; padding: 10px; border: 1px solid #ddd; border-radius: 3px; display: none;"></div>
    </div>
  </div>

  <script>
    jQuery(document).ready(function($) {
      const $form = $('#p-my-sklad-products-sync');
      const $submitButton = $form.find('button[type="submit"]');
      const $container = $('.sync-status-container');
      const $bar = $('.progress-bar');
      const $text = $('.progress-text');
      const $message = $('.status-message');
      const $log = $('.sync-log');

      // === –ü–†–û–í–ï–†–ö–ê –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï –°–¢–†–ê–ù–ò–¶–´ ===
      checkInitialSyncStatus();

      function checkInitialSyncStatus() {
        // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        $.post(ajaxurl, {
          action: 'p_my_sklad_products_check_sync_status',
          nonce: '<?php echo wp_create_nonce("p_my_sklad_products_check_sync_nonce"); ?>'
        }, function(res) {
          if (res.success) {
            const data = res.data;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            if (data.status === 'in_progress') {
              $container.show();
              $bar.css('width', data.progress + '%');
              $text.text(data.progress + '%');
              $message.text('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏...');

              // üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –∑–∞–¥–∞—á–∞ –≤ cron
              $.post(ajaxurl, {
                action: 'p_my_sklad_product_check_cron_active',
                nonce: '<?php echo wp_create_nonce("p_my_sklad_products_check_sync_nonce"); ?>'
              }, function(cronRes) {
                if (cronRes.success && cronRes.data.is_scheduled) {
                  // ‚úÖ –ó–∞–¥–∞—á–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–ø—Ä–æ—Å
                  $message.text(data.message);
                  startPolling();
                } else {
                  // ‚ùå –ó–∞–¥–∞—á–∞ –ù–ï –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ ‚Üí –∑–Ω–∞—á–∏—Ç, –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∞
                  const errorMsg = '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±—ã–ª–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ cron. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ';
                  $message.css('color', 'red').text(errorMsg);
                  $bar.css('background', '#f44336');
                  $submitButton.prop('disabled', false).val('–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞');

                  // ‚ö†Ô∏è –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–±—Ä–æ—Å–∏—Ç—å option –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                  $.post(ajaxurl, {
                    action: 'p_my_sklad_reset_broken_sync',
                    nonce: '<?php echo wp_create_nonce("p_my_sklad_products_check_sync_nonce"); ?>'
                  });
                }
              }).fail(function() {
                $message.css('color', 'orange').text('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å cron. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª—ë–Ω.');
                $submitButton.prop('disabled', false).val('–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å');
              });
            } else if (data.status === 'error') {
              $container.show();
              $bar.css('width', data.progress + '%');
              $text.text(data.progress + '%');
              $message.css('color', 'red').text(data.message);
              $bar.css('background', '#f44336');
              $submitButton.prop('disabled', false).val('–ü–æ–≤—Ç–æ—Ä–∏—Ç—å');
            }
            // –ï—Å–ª–∏ completed/idle ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
          }
        }).fail(function() {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.');
        });
      }

      // === –û–ü–†–û–° –°–¢–ê–¢–£–°–ê –í –¶–ò–ö–õ–ï ===
      function startPolling() {
        function poll() {
          $.post(ajaxurl, {
            action: 'p_my_sklad_products_check_sync_status',
            nonce: '<?php echo wp_create_nonce("p_my_sklad_products_check_sync_nonce"); ?>'
          }, function(res) {
            if (res.success) {
              const data = res.data;
              $bar.css('width', data.progress + '%');
              $text.text(data.progress + '%');
              $message.text(data.message);

              if (data.status === 'in_progress') {
                setTimeout(poll, 2000); // –æ–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫
              } else if (data.status === 'completed') {
                $message.css('color', '#4CAF50').text(data.message);
                $submitButton.prop('disabled', false).val('–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞');
                $bar.css('background', '#4CAF50');
              } else if (data.status === 'error') {
                $message.css('color', 'red');
                $bar.css('background', '#f44336');
                $submitButton.prop('disabled', false).val('–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞');
              }
            }
          }).fail(function() {
            setTimeout(poll, 5000);
          });
        }
        poll(); // —Å—Ç–∞—Ä—Ç—É–µ–º –æ–ø—Ä–æ—Å
      }

      // === –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò "–ó–ê–ü–£–°–¢–ò–¢–¨" ===
      $form.on('submit', function(e) {
        e.preventDefault();

        $container.show();
        $bar.css('width', '0%').css('background', '#007cba');
        $text.text('0%');
        $message.text('–ó–∞–ø—É—Å–∫...').css('color', '#555');
        $log.empty().hide();
        $submitButton.prop('disabled', true).val('–ò–¥—ë—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');

        $.post(ajaxurl, {
          action: 'p_my_sklad_products_start_sync',
          nonce: '<?php echo wp_create_nonce("p_my_sklad_products_sync_nonce"); ?>'
        }, function(res) {
          if (res.success) {
            startPolling(); // –Ω–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å
          } else {
            showError(res.data.message || '–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞.');
          }
        }).fail(function() {
          showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.');
        });
      });

      function showError(msg) {
        $message.css('color', 'red').text('–û—à–∏–±–∫–∞: ' + msg);
        $bar.css('background', '#f44336');
        $submitButton.prop('disabled', false).val('–ü–æ–≤—Ç–æ—Ä–∏—Ç—å');
      }
    });
  </script>
<?php
}


// === WP-CRON: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ –±–∞—Ç—á–∞ ===
add_action('p_my_sklad_run_sync_batch', 'p_my_sklad_run_sync_batch');

function p_my_sklad_run_sync_batch()
{
  $progress = get_option('p_my_sklad_products_sync_progress', [
    'status'    => 'idle',
    'processed' => 0,
    'total'     => 0,
    'nextHref'  => null,
  ]);

  if ($progress['status'] !== 'in_progress') {
    p_my_sklad_log()->debug('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞: —Å—Ç–∞—Ç—É—Å –Ω–µ "in_progress"', ['current_status' => $progress['status']]);
    return;
  }

  p_my_sklad_log()->debug('–ó–∞–ø—É—â–µ–Ω —Å–ª–µ–¥—É—é—â–∏–π –±–∞—Ç—á —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏', [
    'batch_start' => $progress['processed'],
    'nextHref' => $progress['nextHref']
  ]);

  $token = get_option('p_my_sklad_access_token');
  if (!$token) {
    update_option('p_my_sklad_products_sync_progress', array_merge($progress, [
      'status'  => 'error',
      'message' => '‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.'
    ]));
    p_my_sklad_log()->error('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç access token');
    return;
  }

  $settings = get_option('p_my_sklad_settings_products', []);
  $batch_size = !empty($settings['products_limit']) ? (int)$settings['products_limit'] : 200;

  $url = $progress['nextHref'] ?: add_query_arg(
    ['limit' => $batch_size],
    'https://api.moysklad.ru/api/remap/1.2/entity/assortment'
  );

  p_my_sklad_log()->debug('–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –∫ API –ú–æ–π–°–∫–ª–∞–¥', [
    'url' => $url,
    'batch_size' => $batch_size
  ]);

  $response = wp_remote_get($url, [
    'headers' => [
      'Authorization'   => "Bearer {$token}",
      'Accept-Encoding' => 'gzip',
    ],
    'timeout' => 30,
  ]);

  if (is_wp_error($response)) {
    $error_msg = $response->get_error_message();
    update_option('p_my_sklad_products_sync_progress', array_merge($progress, [
      'status'  => 'error',
      'message' => '‚ùå –û—à–∏–±–∫–∞ API: ' . $error_msg
    ]));
    p_my_sklad_log()->error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API –ú–æ–π–°–∫–ª–∞–¥', [
      'error' => $error_msg,
      'url' => $url
    ]);
    return;
  }

  $body = wp_remote_retrieve_body($response);
  $data = json_decode($body, true);

  if (empty($data) || !isset($data['rows'])) {
    update_option('p_my_sklad_products_sync_progress', array_merge($progress, [
      'status'  => 'error',
      'message' => '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API.'
    ]));
    p_my_sklad_log()->error('API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç');
    return;
  }

  if ($progress['total'] == 0 && isset($data['meta']['size'])) {
    $progress['total'] = (int)$data['meta']['size'];
    p_my_sklad_log()->info('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏', [
      'total_count' => $progress['total']
    ]);
  }

  foreach ($data['rows'] as $product) {
    $ms_code = $product['code'] ?? 'N/A';
    $name = $product['name'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';

    p_my_sklad_log()->debug("–ù–∞—á–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–∞", [
      'ms_code' => $ms_code,
      'name' => $name,
      'type' => $product['type'] ?? 'unknown'
    ]);

    p_my_sklad_import_single_product($product);

    $progress['processed']++;
    $progress['message'] = "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {$progress['processed']} –∏–∑ " . ($progress['total'] ?: '?') . "...";
    update_option('p_my_sklad_products_sync_progress', $progress);

    usleep(50000); // 0.05 —Å–µ–∫—É–Ω–¥—ã
  }

  sleep(3);

  if (!empty($data['meta']['nextHref'])) {
    $progress['nextHref'] = $data['meta']['nextHref'];
    update_option('p_my_sklad_products_sync_progress', $progress);

    if (!wp_next_scheduled('p_my_sklad_run_sync_batch')) {
      wp_schedule_single_event(time() + 1, 'p_my_sklad_run_sync_batch');
      p_my_sklad_log()->debug('–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω —Å–ª–µ–¥—É—é—â–∏–π –±–∞—Ç—á —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏', [
        'next_processed' => $progress['processed'],
        'remaining' => ($progress['total'] - $progress['processed'])
      ]);
    }
  } else {
    $progress['status'] = 'completed';
    $progress['message'] = "‚úÖ –ì–æ—Ç–æ–≤–æ! –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {$progress['processed']} —Ç–æ–≤–∞—Ä–æ–≤.";
    delete_option('p_my_sklad_products_sync_progress');

    p_my_sklad_log()->info('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ', [
      'total_imported' => $progress['processed']
    ]);
  }
}

/**
 * 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ cron-—Å–æ–±—ã—Ç–∏—è ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é, –µ—Å–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞
 */
add_action('p_my_sklad_cron_sync_products', 'p_my_sklad_cron_sync_products_handler');

function p_my_sklad_cron_sync_products_handler()
{
  wp_clear_scheduled_hook('p_my_sklad_run_sync_batch');
  delete_option('p_my_sklad_products_sync_progress');

  $initial_state = [
    'status'    => 'in_progress',
    'processed' => 0,
    'total'     => 0,
    'nextHref'  => null,
    'message'   => '–ó–∞–ø—É—â–µ–Ω–æ cron-–∑–∞–¥–∞–Ω–∏–µ–º (–ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)...',
  ];

  update_option('p_my_sklad_products_sync_progress', $initial_state);

  wp_schedule_single_event(time() + 1, 'p_my_sklad_run_sync_batch');

  p_my_sklad_log()->info('Cron: –ó–∞–ø—É—â–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤', [
    'event' => 'p_my_sklad_cron_sync_products',
    'action' => 'scheduled_first_batch'
  ]);
}
